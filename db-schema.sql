/*
    NOTES:
     - Some of these fields will require html-encoding before displaying to avoid javascript injection
       : http://ca3.php.net/manual/en/function.htmlentities.php
     - Reports will be generated by information already in the databse,
       therefore it doesn't need it's own table
*/

/* Object Tables, each of these could be an object in the api */
    CREATE DATABASE IF NOT EXISTS tutoroauthapi;
    use tutoroauthapi;

    /* API Tokens will be stored in a java memory, not in the database */
    CREATE TABLE IF NOT EXISTS Users(
        ID        INT          NOT NULL AUTO_INCREMENT,
        userName  VARCHAR(32)  NOT NULL,
        firstName VARCHAR(32),
        lastName  VARCHAR(32),
        saltHash  VARCHAR(255) NOT NULL,  /* http://php.net/manual/en/function.password-hash.php (salt stored in same row!) */
        admin     BOOLEAN      NOT NULL,  /* Whether or not the user has admin privileges */
        notify    BOOLEAN      NOT NULL  DEFAULT 1,
        PRIMARY KEY(ID),
        UNIQUE(userName)
    );

    CREATE TABLE IF NOT EXISTS Departments(
        ID       INT         NOT NULL AUTO_INCREMENT,
        deptName VARCHAR(32) NOT NULL,
        PRIMARY KEY(ID),
        UNIQUE(deptName)
    );

    CREATE TABLE IF NOT EXISTS Courses(
        ID         INT         NOT NULL AUTO_INCREMENT,
        courseName VARCHAR(64) NOT NULL,
        /* one-to-many relationship between departments and courses */
        deptID     INT         NOT NULL,
        PRIMARY KEY(ID),
        UNIQUE(courseName)
    );

    CREATE TABLE IF NOT EXISTS Locations(
        ID           INT         NOT NULL AUTO_INCREMENT,
        buildingName VARCHAR(64) NOT NULL,
        roomNumber   VARCHAR(8)  NOT NULL,
        PRIMARY KEY(ID),
        UNIQUE(buildingName, roomNumber)
    );

    /* Knowledgebase files:
         NOTE: if folders correspond with courses, there's no real reason to
         create a whole "Folders" table... */
    CREATE TABLE IF NOT EXISTS KnowledgeFiles(
        ID       INT NOT NULL AUTO_INCREMENT,
        courseID INT NOT NULL,  /* Folder the file goes in */
        userID   INT NOT NULL,  /* Original tutor to create the file */
        /*Will require html encoding before displaying: http://ca3.php.net/manual/en/function.htmlentities.php*/
        fileName VARCHAR(48),
        content  LONGTEXT,  /* Hopefully not null, but wouldn't really break anything */
        approved BOOLEAN DEFAULT 0, /*Whether or not the admin has approved it */
        PRIMARY KEY(ID),
        UNIQUE(courseID, fileName)
    );

    CREATE TABLE IF NOT EXISTS Punchcards(
        ID        INT      NOT NULL AUTO_INCREMENT,
        userID    INT      NOT NULL,
        checkedIn BOOLEAN  NOT NULL, /* if false: checked out */
        tStamp    DATETIME NOT NULL, /* Should set to time of creation */
        PRIMARY KEY(ID)
    );

    CREATE TABLE IF NOT EXISTS Logs (
        ID       INT NOT NULL AUTO_INCREMENT,
        userID   INT NOT NULL,
        courseID INT NOT NULL,
        comments TEXT,
        tStamp   DATETIME NOT NULL, /* Should set to time of creation */
        PRIMARY KEY(ID)
    );

    CREATE TABLE IF NOT EXISTS Timeslots(
        ID        INT NOT NULL AUTO_INCREMENT,
        locID     INT NOT NULL,
        deptID    INT NOT NULL,
        courseID  INT, /* Only if department feels like specifying course */
        startTime DATETIME NOT NULL,
        endTime   DATETIME NOT NULL,
        PRIMARY KEY(ID)
    );

    CREATE TABLE IF NOT EXISTS Surveys( /* Same thing as feedback */
        ID       INT NOT NULL AUTO_INCREMENT,
        courseID INT, /* optional field */
        tutorID  INT,  /* optional */
        rating   TINYINT CHECK(rating <= 10 AND rating > 0), /* optional */
        title    VARCHAR(255) NOT NULL, /* required */
        comment  LONGTEXT, /* optional */
        viewed   BOOLEAN NOT NULL DEFAULT 1, /* for notification functions */
        PRIMARY KEY(ID)
    );

/* many-to-many relationships */

    CREATE TABLE IF NOT EXISTS CourseTutors(
        /*Doesn't need an individual ID*/
        userID   INT NOT NULL,
        courseID INT NOT NULL,
        PRIMARY KEY(courseID, userID)
    );

    CREATE TABLE IF NOT EXISTS TutorTimeslots(
        userID  INT NOT NULL,
        tSlotID INT NOT NULL,
        PRIMARY KEY(userID, tSlotID)
    );
